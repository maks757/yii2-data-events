<?php
namespace maks757\eventsdata\components\image;
/**
 * @author Cherednyk Maxim maks757q@gmail.com
*/

use Imagick;
use maks757\imagable\interfaces\CreateImageInterface;
use yii\base\Object;
use yii\helpers\BaseFileHelper;
use yii\web\UploadedFile;

class CreateImageMetaMulti extends Object implements CreateImageInterface
{
    /**
     * @var Imagick $imagine
     */
    private $imagine;
    private $format;
    private $xml;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->imagine = new Imagick();
    }

    public function thumbnail($pathToImage, $width, $height)
    {
        if($pathToImage->type != 'image/svg+xml') {
            $this->imagine->readImageBlob(file_get_contents($pathToImage->tempName));
            $this->format = $this->imagine->getImageFormat();
        } else {
            $this->format = 'svg';
            $this->xml = $pathToImage;
        }
        if($width > 0 && $height > 0){
            $this->imagine->adaptiveResizeImage($width, $height, true);
        }
    }

    public function save($saveTo)
    {
        $base_path = \Yii::$app->article->imagesPath;
        $path_first = str_replace($base_path, '', $saveTo);
        $path_second = explode('.', $path_first);
        $path = BaseFileHelper::normalizePath($base_path.$path_second[0].'.'.strtolower(!empty($this->format) ? $this->format : 'png'));
        if(!empty($this->xml)) {
            /**
             * @var UploadedFile $xml
             */
            $xml = $this->xml;
            $xml->saveAs($saveTo);
        } else {
            $this->imagine->writeImage($path);
        }
    }
}